[workspace]
resolver = "2"

members = [
  "examples/user",
  "examples/fs_demo",
  "examples/net_demos",
  "examples/net_tcp_bench",
  "examples/fault_recover",
  "examples/isolation_test",
  "examples/threading",
  "examples/hello_world",
  "examples/httpd",
  "examples/std_test",
]

exclude = ["rboot", "examples/rust-tcp-io-perf"]

[package]
authors = ["hukeyang <hky1999@buaa.edu.cn>"]
edition = "2021"
name = "unishyper"
version = "0.2.0"

[lib]
crate-type = ["lib"]
name = "unishyper"

[dependencies]
bit_field = "0.7.0"
buddy_system_allocator = "0.8.0"
cfg-if = "1.0.0"
crossbeam-utils = {version = "0.8.11", default-features = false, features = ["nightly"]}
derive_more = "0.99.17"
intrusive-collections = "0.9"
lazy_static = {version = "1.4", features = ["spin_no_std"]}
log = {version = "0.4.14"}
# log = {version = "0.4.14", features = ["max_level_trace", "release_max_level_trace"]}
# log = {version = "0.4.14", features = ["max_level_debug", "release_max_level_debug"]}
# log = {version = "0.4.14", features = ["max_level_info", "release_max_level_info"]}
spin = "0.9.8"
static_assertions = "1.1.0"
tock-registers = {version = "0.7.0", default-features = false, features = ["register_types"]}
zerocopy = "0.5.0"

## Optional dependencies.
ahash = {version = "0.8", optional = true, default-features = false}
async-task = {version = "4.2", optional = true, default-features = false}
addr2line = {version = "0.20.0", optional = true, default-features = false, features = ["rustc-demangle", "object", "endian-reader"], git= "https://github.com/hky1999/addr2line"}
bitflags = {version = "1.3.2", optional = true, default-features = false}
crossbeam-queue = {version = "0.3.5", optional = true, default-features = false, features = ["alloc"]}
fallible-iterator = {version = "0.2.0", default-features = false, optional = true}
futures-lite = {version = "1.11", optional = true, default-features = false, features = ["alloc"]}
hashbrown = {version = "0.13.1", optional = true, default-features = false}
ioslice = {version = "0.6.0-alpha.2", optional = true, default-features = false}
libm = {version = "0.2", optional = true, default-features = false}
lru = {version = "0.11.0", optional = true}
no-std-net = {version = "0.6.0", optional = true}
xmas-elf = {version = "0.8.0", optional = true}

[target.'cfg(target_arch = "aarch64")'.dependencies]
cortex-a = {git = "https://github.com/hky1999/cortex-a"}
gimli = {version = "0.19.0", default-features = false, features = ["read", "alloc"]}

[target.'cfg(target_arch = "x86_64")'.dependencies]
apic = {git = "https://github.com/hky1999/apic-rs"}
pic8259 = "0.10.1"
raw-cpuid = "10.6.1"
rboot = {git = "https://github.com/hky1999/rboot.git", default-features = false}
bitflags = {version = "1.3.2", default-features = false}
x86_64 = "0.14.2"

[target.'cfg(target_arch = "riscv64")'.dependencies]
riscv = { git = "https://github.com/hky1999/riscv" }

[dependencies.smoltcp]
default-features = false
features = [
  "alloc",
  "async",
  "medium-ethernet",
  "proto-ipv4",
  "proto-ipv6",
  "socket-tcp",
  "socket-udp", # Enable for increased output  # "log",  # "verbose",
]
optional = true
version = "0.8.1"

[dependencies.fatfs]
default-features = false
features = ["lfn", "alloc", "unicode", "log_level_trace"]
git = "https://github.com/rafalh/rust-fatfs"
optional = true
version = "0.4"

[dependencies.inject]
path = "inject"
optional = true

[build-dependencies]
chrono = "0.4.23"

[features]
alloc = []
default = ["qemu", "terminal", "tcp", "fat", "fs", "unilib", "log-level-info"]
fat = [
  "fatfs",
  "lru",
]
fs = [
  "ioslice",
  "libm",
]
mpk = []
pci = []
qemu = []
scheduler-global = ["smp"]
scheduler-percore = ["smp"]
serial = []
shyper = []
smp = []
std = ["serial", "ahash", "hashbrown", "bitflags", "libm"]
tcp = [
  "async-task",
  "futures-lite",
  "smoltcp",
  "crossbeam-queue",
  "ioslice",
  "no-std-net",
]
terminal = ["serial"]
tx2 = []
unilib = []
unwind = [
  "fallible-iterator",
  "xmas-elf",
  "addr2line",
]
unwind-test = [
  "dep:inject",
  "unwind",
]
log-level-off = ["log/max_level_off", "log/release_max_level_off"]
log-level-error = ["log/max_level_error", "log/release_max_level_error"]
log-level-warn = ["log/max_level_warn", "log/release_max_level_warn"]
log-level-info = ["log/max_level_info", "log/release_max_level_info"]
log-level-debug = ["log/max_level_debug", "log/release_max_level_debug"]
log-level-trace = ["log/max_level_trace", "log/release_max_level_trace"]

[profile.release]
opt-level = 's'
debug = true
lto = true
